import re
from urllib.parse import urlparse, parse_qs

def analyze_request(line):
    """
    Analyzes a log line to determine if it's exploiting the WordPress 4.7.0-4.7.1 content injection vulnerability.
    Returns (is_exploit, details) tuple.
    """
    # Pattern that matches: "POST /wp-json/wp/v2/posts/X?id=Y HTTP/1.1" 200
    pattern = r'"POST /wp-json/wp/v2/posts/(\d+)\?.*? HTTP/\d\.\d" 200'
    match = re.search(pattern, line)
    
    if match:
        url_pattern = r'POST ([^ ]+)'
        url_match = re.search(url_pattern, line)
        if url_match:
            url = url_match.group(1)
            parsed = urlparse(url)
            query_params = parse_qs(parsed.query)
            
            path_id = match.group(1)  # ID from the URL path
            query_id = query_params.get('id', [None])[0]  # ID from the parameters
            
            # If the IDs are different and the request was successful (200), it's likely an exploit
            if query_id and path_id != query_id:
                return True, {
                    'path_id': path_id,
                    'query_id': query_id,
                    'status': "200",
                    'full_url': url
                }
    
    return False, None

def main():
    log_file = "apache.log"
    
    print(f"[*] Analyzing '{log_file}' for WordPress REST API Content Injection vulnerability exploitation...")
    
    with open(log_file, 'r') as f:
        exploits_found = []
        for line in f:
            is_exploit, details = analyze_request(line)
            if is_exploit:
                exploits_found.append((line.strip(), details))

        if exploits_found:
            print(f"\n[+] Found {len(exploits_found)} potential exploitation attempts:")
            for line, details in exploits_found:
                print("\n[+] Detected exploit attempt:")
                print(f"  - Path ID: {details['path_id']}")
                print(f"  - Query ID: {details['query_id']}")
                print(f"  - Status: {details['status']}")
                print(f"  - URL: {details['full_url']}")
                print(f"  - Full log entry:\n    {line}")
        else:
            print("[-] No exploitation attempts found.")
    
if __name__ == "__main__":
    main()
